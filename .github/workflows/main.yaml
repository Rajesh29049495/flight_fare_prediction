name: workflow

on:
  push:
    branches:
      - main

permissions: 
  id-token: write
  contents: read


jobs:
 build-and-push-ecr-images:
  name: Continuous Delivery
  runs-on: ubuntu-latest
  env:
    AWS_ECR_LOGIN_URI_API: ${{ secrets.AWS_ECR_LOGIN_SERVER }}/${{ secrets.AWS_ACCOUNT_ID }}/${{ secrets.ECR_REPOSITORY_NAME_API }}
    AWS_ECR_LOGIN_URI_TB: ${{ secrets.AWS_ECR_LOGIN_SERVER }}/${{ secrets.AWS_ACCOUNT_ID }}/${{ secrets.ECR_REPOSITORY_NAME_TB }}
  steps:
   - name: Checkout Code
     uses: actions/checkout@v3
   - name: Install Utilities
     run: |
      sudo apt-get update
      sudo apt-get install -y jq unzip

   - name: Configure AWS credentials
     uses: aws-actions/configure-aws-credentials@v1
     with:
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      aws-region: ${{ secrets.AWS_REGION }}

   - name: Login to Amazon ECR
     id: login-ecr
     uses: aws-actions/amazon-ecr-login@v1
    
   - name: Build and Push API Docker Image
     env:
      IMAGE_TAG: latest
     run: |
      docker build -t ${{ env.AWS_ECR_LOGIN_URI_API }}:${{ env.IMAGE_TAG }} -f Dockerfile.API .
      docker push ${{ env.AWS_ECR_LOGIN_URI_API }}:${{ env.IMAGE_TAG }}

   - name: Build and Push TB Docker Image
     env:
      IMAGE_TAG: latest
     run: |
      docker build -t ${{ env.AWS_ECR_LOGIN_URI_TB }}:${{ env.IMAGE_TAG }} -f Dockerfile.TB .
      docker push ${{ env.AWS_ECR_LOGIN_URI_TB }}:${{ env.IMAGE_TAG }}
      
 run-api-on-instance:
  needs: build-and-push-ecr-images
  runs-on: self-hosted-api
  env:
    AWS_ECR_LOGIN_URI_API: ${{ secrets.AWS_ECR_LOGIN_SERVER }}/${{ secrets.AWS_ACCOUNT_ID }}/${{ secrets.ECR_REPOSITORY_NAME_API }}
  steps:
  - name: Checkout
    uses: actions/checkout@v3

  - name: Configure AWS credentials
    uses: aws-actions/configure-aws-credentials@v1
    with:
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  - name: Install Utilities
    run: |
      sudo apt-get update
      sudo apt-get install -y jq unzip
  - name: Login to Amazon ECR
    id: login-ecr
    uses: aws-actions/amazon-ecr-login@v1

  - name: Pull API Docker Image
    run: |
      sudo docker pull ${{ env.AWS_ECR_LOGIN_URI_API }}:latest

  - name: Run API Docker Image
    run: |
      sudo docker run -d --name api -p 80:80 ${{ env.AWS_ECR_LOGIN_URI_API }}:latest

 run-tb-on-instance:
  needs: build-and-push-ecr-images
  runs-on: self-hosted
  env:
    AWS_ECR_LOGIN_URI_TB: ${{ secrets.AWS_ECR_LOGIN_SERVER }}/${{ secrets.AWS_ACCOUNT_ID }}/${{ secrets.ECR_REPOSITORY_NAME_TB }}
  steps:
  - name: Checkout
    uses: actions/checkout@v3

  - name: Configure AWS credentials
    uses: aws-actions/configure-aws-credentials@v1
    with:
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  - name: Install Utilities
    run: |
      sudo apt-get update
      sudo apt-get install -y jq unzip
  - name: Login to Amazon ECR
    id: login-ecr
    uses: aws-actions/amazon-ecr-login@v1

  - name: Pull TB Docker Image
    run: |
      sudo docker pull ${{ env.AWS_ECR_LOGIN_URI_TB }}:latest

  - name: Run TB Docker Image
    run: |
      sudo docker run -d --name tb -p 8080:8080 ${{ env.AWS_ECR_LOGIN_URI_TB }}:latest  
