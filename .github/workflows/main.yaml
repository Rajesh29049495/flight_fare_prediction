name: workflow

on:
  push:
    branches:
      - main

permissions: 
  id-token: write
  contents: read


jobs:
  build-and-push-ecr-images:
    name: Continuous Delivery
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
    
      - name: Build and Push API Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME_API }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile.API .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Build and Push TB Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME_TB }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile.tb .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
  run-api-on-instance:
    needs: build-and-push-ecr-images
    runs-on: self-hosted-api
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
    - name: Install Utilities
      run: |
        sudo apt-get update
        sudo apt-get install -y jq unzip
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Pull docker image
      run: |
        docker pull ${{secrets.AWS_ECR_LOGIN_URI_API}}:latest

    - name: Run API Docker Image
      run: |
        sudo docker run -d --name api -p 5000:5000 ${{ secrets.AWS_ECR_LOGIN_URI_API }}:latest

  run-tb-on-instance:
    needs: build-and-push-ecr-images
    runs-on: self-hosted
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
    - name: Install Utilities
      run: |
        sudo apt-get update
        sudo apt-get install -y jq unzip
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Pull docker image
      run: |
        docker pull ${{secrets.AWS_ECR_LOGIN_URI__TB}}:latest
    - name: Run Docker Image to serve users
      run: |
        export IMAGE_NAME="${{secrets.AWS_ECR_LOGIN_URI_TB}}"/"${{ secrets.ECR_REPOSITORY_NAME_TB }}":latest AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }} BUCKET_NAME=${{ secrets.BUCKET_NAME}} "MONGO_DB_URL=${{ secrets.MONGO_DB_URL }}" && sudo docker run -d --name tb -p 80:80 ${{ secrets.AWS_ECR_LOGIN_URI_TB }}:latest
